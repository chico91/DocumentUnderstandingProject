<Activity mc:Ignorable="sap sap2010" x:Class="Main" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="1596,6917" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:p="http://schemas.uipath.com/workflow/activities/intelligentocr" xmlns:p1="http://schemas.uipath.com/workflow/activities/intelligentocr/classification" xmlns:p2="http://schemas.uipath.com/workflow/activities/document-processing-contracts/classification" xmlns:p3="http://schemas.uipath.com/workflow/activities/document-processing-contracts/dom" xmlns:p4="http://schemas.uipath.com/workflow/activities/document-processing-contracts/results" xmlns:p5="http://schemas.uipath.com/workflow/activities/document-processing-contracts/taxonomy" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Drawing;assembly=System.Drawing" xmlns:ss="clr-namespace:System.Security;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:uiaam="clr-namespace:UiPath.IntelligentOCR.Activities.Actions.Model;assembly=UiPath.IntelligentOCR.Activities" xmlns:uoa="clr-namespace:UiPath.OmniPage.Activities;assembly=UiPath.OmniPage.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="86">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Taxonomy</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.TaxonomyManagement</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.Digitization</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Dom</x:String>
      <x:String>UiPath.Vision.OCR</x:String>
      <x:String>UiPath.OCR.Contracts</x:String>
      <x:String>UiPath.OmniPage.Activities</x:String>
      <x:String>UiPath.OCR.Contracts.Activities</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Results</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.DocumentClassification</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Classification</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts</x:String>
      <x:String>System.Net</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.Actions.Model</x:String>
      <x:String>UiPath.IntelligentOCR.Activities</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Training</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.Training</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="37">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices.RuntimeInformation</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.DocumentProcessing.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OmniPage.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Contracts</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Main Sequence" sap:VirtualizedContainerService.HintSize="1606,6852" sap2010:WorkflowViewState.IdRef="Sequence_2">
    <Sequence.Variables>
      <Variable x:TypeArguments="ss:SecureString" Name="DocApiKey" />
      <Variable x:TypeArguments="x:String" Name="DocumentFolderPath" />
      <Variable x:TypeArguments="x:String" Name="DocumentStorageFilePath" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Assign sap:VirtualizedContainerService.HintSize="1564,60" sap2010:WorkflowViewState.IdRef="Assign_5">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[DocumentStorageFilePath]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">C:\Users\Chico\Desktop\FullCover DU Lahiru\TrainingDUProcess\DocumentUnderstanding\Processed Documents\</InArgument>
      </Assign.Value>
    </Assign>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1564,91" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[DocumentStorageFilePath]" />
    <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="1564,305" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <TryCatch.Try>
        <ui:SelectFolder DisplayName="Browse for folder" sap:VirtualizedContainerService.HintSize="334,78" sap2010:WorkflowViewState.IdRef="SelectFolder_1" SelectedFolder="[DocumentFolderPath]" />
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Error" Message="[&quot;User Did Not Provide Folder Path&quot;]" />
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
    <Sequence DisplayName="Process Document" sap:VirtualizedContainerService.HintSize="1564,6184" sap2010:WorkflowViewState.IdRef="Sequence_1">
      <Sequence.Variables>
        <Variable x:TypeArguments="s:String[]" Name="DocumentPaths" />
        <Variable x:TypeArguments="p5:DocumentTaxonomy" Name="DocTaxonomy" />
        <Variable x:TypeArguments="s:Exception" Name="ClassificationException" />
        <Variable x:TypeArguments="s:Exception" Name="ValidationException" />
        <Variable x:TypeArguments="x:Boolean" Name="RequireManualClassification" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:GetRobotCredential TimeoutMS="{x:Null}" Username="{x:Null}" AssetName="DUApiKey" DisplayName="Get ApiKey- Classify" sap:VirtualizedContainerService.HintSize="1522,180" sap2010:WorkflowViewState.IdRef="GetRobotCredential_1" Password="[DocApiKey]" />
      <Assign sap:VirtualizedContainerService.HintSize="1522,60" sap2010:WorkflowViewState.IdRef="Assign_1">
        <Assign.To>
          <OutArgument x:TypeArguments="s:String[]">[DocumentPaths]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="s:String[]">[Directory.GetFiles(DocumentFolderPath)]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1522,91" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;Start Taxonomy&quot;]" />
      <p:LoadTaxonomy DisplayName="Load Taxonomy" sap:VirtualizedContainerService.HintSize="1522,103" sap2010:WorkflowViewState.IdRef="LoadTaxonomy_1" Taxonomy="[DocTaxonomy]" />
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1522,91" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[&quot;End Taxonomy&quot;]" />
      <ParallelForEach x:TypeArguments="x:String" DisplayName="Parallel For Each" sap:VirtualizedContainerService.HintSize="1522,5367" sap2010:WorkflowViewState.IdRef="ParallelForEach`1_2" Values="[DocumentPaths]">
        <ActivityAction x:TypeArguments="x:String">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:String" Name="Docitem" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Process One File" sap:VirtualizedContainerService.HintSize="1472,5219" sap2010:WorkflowViewState.IdRef="Sequence_4">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="DocText" />
              <Variable x:TypeArguments="p3:Document" Name="DocObjectModel" />
              <Variable x:TypeArguments="p4:ClassificationResult[]" Name="AutoClassificationReuslts" />
              <Variable x:TypeArguments="p4:ClassificationResult[]" Name="ValidatedClassificationResults" />
              <Variable x:TypeArguments="x:String" Name="ClassifiedDocumentPath" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="1430,162" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
              <ui:MultipleAssign.AssignOperations>
                <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="s:Exception">[ClassificationException]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="s:Exception">[Nothing]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="s:Exception">[ValidationException]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="s:Exception">[Nothing]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:Boolean">[RequireManualClassification]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                </scg:List>
              </ui:MultipleAssign.AssignOperations>
            </ui:MultipleAssign>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1430,91" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="[&quot;Digitizing Documents &lt;&quot; + Docitem + &quot;Started&quot;]" />
            <p:DigitizeDocument ApplyOcrMigrated="True" ApplyOcrOnPdf="Auto" DegreeOfParallelism="-1" DisplayName="Digitize Document Data" DocumentObjectModel="[DocObjectModel]" DocumentPath="[Docitem]" DocumentText="[DocText]" ForceApplyOCR="False" sap:VirtualizedContainerService.HintSize="1430,293" sap2010:WorkflowViewState.IdRef="DigitizeDocument_1">
              <p:DigitizeDocument.OCREngine>
                <ActivityFunc x:TypeArguments="sd:Image, x:String, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                  <ActivityFunc.Argument1>
                    <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                  </ActivityFunc.Argument1>
                  <ActivityFunc.Argument2>
                    <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                  </ActivityFunc.Argument2>
                  <uoa:OmniPageOCR Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Scale="{x:Null}" Text="{x:Null}" BundleType="Basic" ComputeSkewAngle="False" DisplayName="OmniPage OCR" ExtractHandprintedText="False" ExtractWords="True" sap:VirtualizedContainerService.HintSize="312,22" sap2010:WorkflowViewState.IdRef="OmniPageOCR_1" Image="[Image]" PredictionId="[PredictionId]" />
                </ActivityFunc>
              </p:DigitizeDocument.OCREngine>
            </p:DigitizeDocument>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1430,91" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Info" Message="[&quot;Digitizing Documents &lt;&quot; + Docitem + &quot;Ended&quot;]" />
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1430,91" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Info" Message="[&quot;Classifying Documents &lt;&quot; + Docitem + &quot; Started&quot;]" />
            <p1:ClassifyDocumentScope ClassificationResults="[AutoClassificationReuslts]" DisplayName="Classify Document Scope" DocumentObjectModel="[DocObjectModel]" DocumentPath="[Docitem]" DocumentText="[DocText]" sap:VirtualizedContainerService.HintSize="1430,587" sap2010:WorkflowViewState.IdRef="ClassifyDocumentScope_1" Taxonomy="[DocTaxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UIa513c853bf5b4b36aad08e834bc30ed4&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;Finance.Incoming.Invoices&quot;:{&quot;OriginalDocumentTypeId&quot;:&quot;Finance.Incoming.Invoices&quot;,&quot;ClassifierDocumentTypeId&quot;:null,&quot;IsDocumentTypeIdMapped&quot;:true},&quot;Finance.Incoming.Form10-K&quot;:{&quot;OriginalDocumentTypeId&quot;:&quot;Finance.Incoming.Form10-K&quot;,&quot;ClassifierDocumentTypeId&quot;:null,&quot;IsDocumentTypeIdMapped&quot;:true},&quot;Finance.Incoming.Form4&quot;:{&quot;OriginalDocumentTypeId&quot;:&quot;Finance.Incoming.Form4&quot;,&quot;ClassifierDocumentTypeId&quot;:null,&quot;IsDocumentTypeIdMapped&quot;:true},&quot;Finance.Incoming.AccountCreationForm&quot;:{&quot;OriginalDocumentTypeId&quot;:&quot;Finance.Incoming.AccountCreationForm&quot;,&quot;ClassifierDocumentTypeId&quot;:null,&quot;IsDocumentTypeIdMapped&quot;:true},&quot;Finance.Incoming.PurchaseOrder&quot;:{&quot;OriginalDocumentTypeId&quot;:&quot;Finance.Incoming.PurchaseOrder&quot;,&quot;ClassifierDocumentTypeId&quot;:null,&quot;IsDocumentTypeIdMapped&quot;:true},&quot;Finance.Incoming.UtlityBills&quot;:{&quot;OriginalDocumentTypeId&quot;:&quot;Finance.Incoming.UtlityBills&quot;,&quot;ClassifierDocumentTypeId&quot;:null,&quot;IsDocumentTypeIdMapped&quot;:true}}}},&quot;ClassifierMinimumConfidence&quot;:{&quot;UIa513c853bf5b4b36aad08e834bc30ed4&quot;:&quot;0&quot;},&quot;DocumentTypesByPersistenceId&quot;:{&quot;UIa513c853bf5b4b36aad08e834bc30ed4&quot;:[]}}">
              <p1:ClassifyDocumentScope.Classifiers>
                <p1:IntelligentKeywordClassifier LearningData="{x:Null}" sap2010:Annotation.AnnotationText="Convert Secure String in to String with new System.Net.NetworkCredential()" ApiKey="[(new System.Net.NetworkCredential(&quot;&quot;, DocApiKey)).Password]" DisplayName="Intelligent Keyword Classifier" Endpoint="https://du.uipath.com/svc/intelligentkeywords" sap:VirtualizedContainerService.HintSize="234,266" sap2010:WorkflowViewState.IdRef="IntelligentKeywordClassifier_1" LearningFilePath="DocumentProcessing\DocClassifier\IntelligentDocClassifier.json" PersistenceId="UIa513c853bf5b4b36aad08e834bc30ed4">
                  <p1:IntelligentKeywordClassifier.ClassifierResult>
                    <OutArgument x:TypeArguments="p2:ClassifierResult">
                      <DelegateArgumentReference x:TypeArguments="p2:ClassifierResult">
                        <DelegateOutArgument x:TypeArguments="p2:ClassifierResult" Name="ClassifierResult" />
                      </DelegateArgumentReference>
                    </OutArgument>
                  </p1:IntelligentKeywordClassifier.ClassifierResult>
                  <p1:IntelligentKeywordClassifier.DocumentObjectModel>
                    <InArgument x:TypeArguments="p3:Document">
                      <DelegateArgumentValue x:TypeArguments="p3:Document">
                        <DelegateInArgument x:TypeArguments="p3:Document" Name="DocumentObjectModel" />
                      </DelegateArgumentValue>
                    </InArgument>
                  </p1:IntelligentKeywordClassifier.DocumentObjectModel>
                  <p1:IntelligentKeywordClassifier.DocumentPath>
                    <InArgument x:TypeArguments="x:String">
                      <DelegateArgumentValue x:TypeArguments="x:String">
                        <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                      </DelegateArgumentValue>
                    </InArgument>
                  </p1:IntelligentKeywordClassifier.DocumentPath>
                  <p1:IntelligentKeywordClassifier.DocumentText>
                    <InArgument x:TypeArguments="x:String">
                      <DelegateArgumentValue x:TypeArguments="x:String">
                        <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                      </DelegateArgumentValue>
                    </InArgument>
                  </p1:IntelligentKeywordClassifier.DocumentText>
                  <p1:IntelligentKeywordClassifier.DocumentTypes>
                    <InArgument x:TypeArguments="p2:ClassifierDocumentType[]">
                      <DelegateArgumentValue x:TypeArguments="p2:ClassifierDocumentType[]">
                        <DelegateInArgument x:TypeArguments="p2:ClassifierDocumentType[]" Name="DocumentTypes" />
                      </DelegateArgumentValue>
                    </InArgument>
                  </p1:IntelligentKeywordClassifier.DocumentTypes>
                  <p1:IntelligentKeywordClassifier.PredictionId>
                    <InArgument x:TypeArguments="x:String">
                      <DelegateArgumentValue x:TypeArguments="x:String">
                        <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                      </DelegateArgumentValue>
                    </InArgument>
                  </p1:IntelligentKeywordClassifier.PredictionId>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </p1:IntelligentKeywordClassifier>
              </p1:ClassifyDocumentScope.Classifiers>
            </p1:ClassifyDocumentScope>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1430,91" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Info" Message="[&quot;Classifying Document &lt;&quot; + Docitem + &quot;s Ended&quot;]" />
            <ui:ForEach x:TypeArguments="p4:ClassificationResult" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="1430,787" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[AutoClassificationReuslts]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="p4:ClassificationResult">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="p4:ClassificationResult" Name="FileAutoClassificationResult" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Verify File For Each Classification Result" sap:VirtualizedContainerService.HintSize="526,663" sap2010:WorkflowViewState.IdRef="Sequence_7">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="484,61" sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="[&quot;File Confidence for &quot; + FileAutoClassificationResult.ToString + &quot;:&quot;  + FileAutoClassificationResult.Confidence.ToString]" />
                    <If Condition="[FileAutoClassificationResult.Confidence &lt;0.7]" DisplayName="If Confidence Level is less than Threshold" sap:VirtualizedContainerService.HintSize="484,470" sap2010:WorkflowViewState.IdRef="If_1">
                      <If.Then>
                        <Sequence sap:VirtualizedContainerService.HintSize="376,283" sap2010:WorkflowViewState.IdRef="Sequence_5">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_2">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Boolean">[RequireManualClassification]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Info" Message="[&quot;Manual Classification will start for &quot; + FileAutoClassificationResult.ToString]" />
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_6">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </Sequence>
                      </If.Else>
                    </If>
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
            </ui:ForEach>
            <If Condition="[RequireManualClassification]" DisplayName="If - Document Class Verification is Required" sap:VirtualizedContainerService.HintSize="1430,1240" sap2010:WorkflowViewState.IdRef="If_2">
              <If.Then>
                <Sequence DisplayName="Manual Classification through Action Center" sap:VirtualizedContainerService.HintSize="558,1082" sap2010:WorkflowViewState.IdRef="Sequence_8">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="uiaam:DocumentClassificationActionData" Name="ClassificationActionObject" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <p:CreateDocumentClassificationAction ActionCatalog="{x:Null}" FolderPath="{x:Null}" TimeoutMs="{x:Null}" ActionOutput="[ClassificationActionObject]" ActionPriority="Medium" ActionTitle="[&quot;Verify Classification &quot; + Path.GetFileName(Docitem).ToString]" AutomaticClassificationResults="[AutoClassificationReuslts]" BucketFolderPath="My Workspace" BucketName="DocTasks" DisplayName="Create Document Classification Action" DocumentObjectModel="[DocObjectModel]" DocumentPath="[Docitem]" DocumentText="[DocText]" sap:VirtualizedContainerService.HintSize="516,365" sap2010:WorkflowViewState.IdRef="CreateDocumentClassificationAction_1" Taxonomy="[DocTaxonomy]" />
                  <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="516,585" sap2010:WorkflowViewState.IdRef="TryCatch_2">
                    <TryCatch.Try>
                      <p:WaitForDocumentClassificationActionAndResume ActionOutput="{x:Null}" StatusMessage="{x:Null}" TimeoutMs="{x:Null}" WaitItemDataObject="{x:Null}" ActionInput="[ClassificationActionObject]" AutomaticClassificationResults="[AutoClassificationReuslts]" DisplayName="Wait For Document Classification Action And Resume" DocumentObjectModel="[DocObjectModel]" DocumentPath="[ClassifiedDocumentPath]" DocumentText="[DocText]" DownloadFolderPath="Download DIrectory Path" sap:VirtualizedContainerService.HintSize="478,358" sap2010:WorkflowViewState.IdRef="WaitForDocumentClassificationActionAndResume_1" RemoveDataFromStorage="False" Taxonomy="[DocTaxonomy]" ValidatedClassificationResults="[ValidatedClassificationResults]" />
                    </TryCatch.Try>
                    <TryCatch.Catches>
                      <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="482,21" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ActivityAction x:TypeArguments="s:Exception">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                          </ActivityAction.Argument>
                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_3">
                            <Assign.To>
                              <OutArgument x:TypeArguments="s:Exception">[ClassificationException]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </ActivityAction>
                      </Catch>
                    </TryCatch.Catches>
                  </TryCatch>
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap:VirtualizedContainerService.HintSize="473,223" sap2010:WorkflowViewState.IdRef="Sequence_9">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="431,131" sap2010:WorkflowViewState.IdRef="MultipleAssign_2">
                    <ui:MultipleAssign.AssignOperations>
                      <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="p4:ClassificationResult[]">[ValidatedClassificationResults]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="p4:ClassificationResult[]">[AutoClassificationReuslts]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[ClassifiedDocumentPath]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[Docitem]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                      </scg:List>
                    </ui:MultipleAssign.AssignOperations>
                  </ui:MultipleAssign>
                </Sequence>
              </If.Else>
            </If>
            <If Condition="[ClassificationException is Nothing]" DisplayName="If- ANy Classification Exception" sap:VirtualizedContainerService.HintSize="1430,1334" sap2010:WorkflowViewState.IdRef="If_3">
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="1009,1174" sap2010:WorkflowViewState.IdRef="Sequence_10">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ParallelForEach x:TypeArguments="p4:ClassificationResult" DisplayName="Parallel For Each- Parallel Process Each Classification Method" sap:VirtualizedContainerService.HintSize="967,1082" sap2010:WorkflowViewState.IdRef="ParallelForEach`1_3" Values="[ValidatedClassificationResults]">
                    <ActivityAction x:TypeArguments="p4:ClassificationResult">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="p4:ClassificationResult" Name="EachClassifier" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Process Document For Each Classification" sap:VirtualizedContainerService.HintSize="917,933" sap2010:WorkflowViewState.IdRef="Sequence_14">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="x:String" Name="DocumentCategory" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="875,60" sap2010:WorkflowViewState.IdRef="Assign_4">
                          <Assign.To>
                            <OutArgument x:TypeArguments="s:Exception">[ValidationException]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="s:Exception">[Nothing]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke OrganizeClassifiedDocuments workflow" sap:VirtualizedContainerService.HintSize="875,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="OrganizeClassifiedDocuments.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="In_DocumentClassifier">[EachClassifier.DocumentTypeId]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="In_DocumentPath">[ClassifiedDocumentPath]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="In_StorageLocation">[DocumentStorageFilePath]</InArgument>
                            <OutArgument x:TypeArguments="x:String" x:Key="Out_DocumentCategory">[DocumentCategory]</OutArgument>
                            <InArgument x:TypeArguments="p4:ClassificationResult" x:Key="In_SegmentClassificationResult">[EachClassifier]</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                        <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="875,588" sap2010:WorkflowViewState.IdRef="CommentOut_1">
                          <ui:CommentOut.Body>
                            <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="839,510" sap2010:WorkflowViewState.IdRef="Sequence_15">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If Condition="[RequireManualClassification]" DisplayName="If - Change Process Method Based on Classification Method" sap:VirtualizedContainerService.HintSize="797,418" sap2010:WorkflowViewState.IdRef="If_4">
                                <If.Then>
                                  <Sequence sap:VirtualizedContainerService.HintSize="376,259" sap2010:WorkflowViewState.IdRef="Sequence_12">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:InvokeProcess ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Process" EntryPointPath="OrganizeClassifiedDocuments.xaml" sap:VirtualizedContainerService.HintSize="334,167" sap2010:WorkflowViewState.IdRef="InvokeProcess_1" ProcessName="DocumentUnderstandingFileProcessor">
                                      <ui:InvokeProcess.Arguments>
                                        <InArgument x:TypeArguments="x:String" x:Key="In_DocumentClassifier">[EachClassifier.DocumentTypeId]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="In_DocumentPath">[ClassifiedDocumentPath]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="In_StorageLocation">[DocumentStorageFilePath]</InArgument>
                                        <OutArgument x:TypeArguments="x:String" x:Key="Out_DocumentCategory">[DocumentCategory]</OutArgument>
                                        <InArgument x:TypeArguments="p4:ClassificationResult" x:Key="In_SegmentClassificationResult">[EachClassifier]</InArgument>
                                      </ui:InvokeProcess.Arguments>
                                    </ui:InvokeProcess>
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <Sequence sap:VirtualizedContainerService.HintSize="376,259" sap2010:WorkflowViewState.IdRef="Sequence_13">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:BeginProcess DisplayName="Run Parallel Process - Organize Classified Documents" EntryPointPath="OrganizeClassifiedDocuments.xaml" sap:VirtualizedContainerService.HintSize="334,167" sap2010:WorkflowViewState.IdRef="BeginProcess_2" ProcessName="DocumentUnderstandingFileProcessor" UsePackage="True">
                                      <ui:BeginProcess.Arguments>
                                        <InArgument x:TypeArguments="x:String" x:Key="In_DocumentClassifier">[EachClassifier.DocumentTypeId]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="In_DocumentPath">[ClassifiedDocumentPath]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="In_StorageLocation">[DocumentStorageFilePath]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="Out_DocumentCategory">[DocumentCategory]</InArgument>
                                        <InArgument x:TypeArguments="p4:ClassificationResult" x:Key="In_SegmentClassificationResult">[EachClassifier]</InArgument>
                                      </ui:BeginProcess.Arguments>
                                    </ui:BeginProcess>
                                  </Sequence>
                                </If.Else>
                              </If>
                            </Sequence>
                          </ui:CommentOut.Body>
                        </ui:CommentOut>
                      </Sequence>
                    </ActivityAction>
                  </ParallelForEach>
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap:VirtualizedContainerService.HintSize="376,185" sap2010:WorkflowViewState.IdRef="Sequence_11">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,93" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Warn" Message="[&quot;Document Reported as Irrelevant Through Classification: &quot; + Path.GetFileName(ClassifiedDocumentPath)]" />
                </Sequence>
              </If.Else>
            </If>
          </Sequence>
        </ActivityAction>
      </ParallelForEach>
    </Sequence>
  </Sequence>
</Activity>